{
	"name": "PIPELINELOAD",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MOVIES",
						"type": "DatasetReference"
					},
					"name": "MOVIES"
				},
				{
					"dataset": {
						"referenceName": "RATINGS",
						"type": "DatasetReference"
					},
					"name": "RATINGS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet3",
						"type": "DatasetReference"
					},
					"name": "RATINGSPARQUET"
				}
			],
			"transformations": [
				{
					"name": "MOVIERATING"
				},
				{
					"name": "RatingBucket"
				},
				{
					"name": "RemoveColumns1",
					"description": "Autogenerated by data preview actions"
				}
			],
			"script": "source(output(\n\t\tmovieId as integer '000',\n\t\ttitle as string,\n\t\tgenres as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MOVIES\nsource(output(\n\t\tuserId as short,\n\t\tmovieId as integer '000',\n\t\trating as double,\n\t\ttimestamp as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> RATINGS\nMOVIES, RATINGS join(MOVIES@movieId == RATINGS@movieId,\n\tjoinType:'inner',\n\tpartitionBy('hash', 2,\n\t\trating\n\t),\n\tbroadcast: 'auto')~> MOVIERATING\nMOVIERATING derive(drvrating = case(rating<=3,'low','high')) ~> RatingBucket\nRatingBucket select(mapColumn(\n\t\tmovieId = MOVIES@movieId,\n\t\ttitle,\n\t\tgenres,\n\t\tuserId,\n\t\trating,\n\t\tdrvrating\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nRemoveColumns1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\trowFolderUrlColumn:'drvrating',\n\ttruncate: true,\n\tmapColumn(\n\t\tmovieId,\n\t\ttitle,\n\t\tgenres,\n\t\tuserId,\n\t\trating,\n\t\tdrvrating\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RATINGSPARQUET"
		}
	}
}